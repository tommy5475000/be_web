generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model TaiKhoan {
  user_id      Int     @id @default(autoincrement())
  kiotUserId   Int?    @unique(map: "kiotUserId")
  userName     String? @db.VarChar(30)
  givenName    String? @db.VarChar(255)
  address      String? @db.VarChar(255)
  mobilePhone  String? @db.VarChar(20)
  retailerId   Int?
  birthDate    String? @db.VarChar(50)
  passWord     String? @db.VarChar(50)
  vaiTro       String? @db.VarChar(50)
  email        String? @db.VarChar(255)
  trangThai    String? @db.VarChar(50)
  createdDate  String? @db.VarChar(50)
  modifiedDate String? @db.VarChar(50)
}

model Attribute {
  id             Int      @id @default(autoincrement())
  productId      Int?
  attributeName  String?  @db.VarChar(50)
  attributeValue String?  @db.VarChar(50)
  Product        Product? @relation(fields: [productId], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "Attribute_ibfk_1")

  @@unique([productId, attributeName], map: "productId")
}

model Product {
  id                   Int         @id @default(autoincrement())
  kiotProductId        Int?        @unique(map: "kiotProductId")
  code                 String?     @db.VarChar(50)
  barCode              String?     @db.VarChar(50)
  name                 String?     @db.VarChar(255)
  fullName             String?     @db.VarChar(255)
  categoryId           Int?
  categoryName         String?     @db.VarChar(255)
  tradeMarkId          Int?
  tradeMarkName        String?     @db.VarChar(255)
  allowsSale           Boolean?
  type                 Int?
  hasVariants          Boolean?
  basePrice            Decimal?    @db.Decimal(10, 2)
  unit                 String?     @db.VarChar(50)
  masterProductId      Int?
  conversionValue      Int?
  createdDate          DateTime?   @db.Timestamp(0)
  modifiedDate         DateTime?   @db.Timestamp(0)
  isActive             Boolean?
  isLotSerialControl   Boolean?
  isBatchExpireControl Boolean?
  retailerId           Int?
  weight               Float?      @db.Float
  description          String?     @db.VarChar(255)
  orderTemplate        String?     @db.VarChar(255)
  Attribute            Attribute[]
}

model TradeMark {
  id   Int     @id
  name String? @db.VarChar(255)
}

model Invoice {
  stt            Int              @id @default(autoincrement())
  id             Int
  uuid           String?          @db.VarChar(255)
  sohd           String           @unique(map: "sohd") @db.VarChar(50)
  purchaseDate   String           @db.VarChar(255)
  branchId       Int
  branchName     String           @db.VarChar(255)
  soldById       Int
  soldByName     String           @db.VarChar(255)
  customerId     Int?
  customerCode   String?          @db.VarChar(50)
  customerName   String?          @db.VarChar(255)
  orderCode      String?          @db.VarChar(50)
  total          Decimal          @db.Decimal(18, 4)
  totalPayment   Decimal          @db.Decimal(18, 4)
  discount       Decimal          @db.Decimal(18, 4)
  discountRatio  Decimal?         @db.Decimal(18, 4)
  status         Int
  statusValue    String           @db.VarChar(50)
  usingCod       Boolean
  createdDate    String           @db.VarChar(255)
  modifiedDate   String?          @db.VarChar(255)
  description    String?          @db.VarChar(255)
  invoiceDetails invoiceDetails[]
  payments       payBills?
}

model invoiceDetails {
  id             Int      @id @default(autoincrement())
  invoiceId      String
  productId      Int
  productCode    String   @db.VarChar(50)
  productName    String   @db.VarChar(255)
  categoryId     Int
  categoryName   String   @db.VarChar(255)
  tradeMarkId    Int?
  tradeMarkName  String?  @db.VarChar(255)
  quantity       Int
  price          Decimal  @db.Decimal(18, 4)
  discount       Decimal? @db.Decimal(18, 4)
  discountRatio  Decimal? @db.Decimal(18, 4)
  usePoint       Boolean?
  note           String?  @db.VarChar(255)
  subTotal       Decimal  @db.Decimal(18, 4)
  serialNumbers  String?  @db.Text
  returnQuantity Int
  Invoice        Invoice  @relation(fields: [invoiceId], references: [sohd], onDelete: Cascade, map: "InvoiceDetails_ibfk_1")

  @@unique([invoiceId, productCode])
}

model payBills {
  id          Int     @id @default(autoincrement())
  invoiceId   String  @unique
  id_pay      Int
  code        String  @db.VarChar(50)
  amount      Decimal @db.Decimal(18, 4)
  method      String  @db.VarChar(50)
  accountId   Int?
  bankAccount String? @db.VarChar(50)
  status      Int
  statusValue String? @db.VarChar(50)
  description String? @db.VarChar(255)
  transDate   String? @db.VarChar(255)
  Invoice     Invoice @relation(fields: [invoiceId], references: [sohd], onDelete: Cascade, map: "payBills_ibfk_1")

  @@unique([invoiceId, code], map: "invoiceId")
}

model Webhook {
  id          Int      @id @default(autoincrement())
  type        String   @db.VarChar(255)
  url         String   @db.VarChar(255)
  isActive    Boolean  @default(true)
  description String?  @db.VarChar(255)
  secret      String   @db.VarChar(255)
  createdAt   DateTime @default(now()) @db.DateTime(0)
  updatedAt   DateTime @default(now()) @db.DateTime(0)
}

model purchaseOrders {
  stt                  Int                    @id @default(autoincrement())
  id                   Int
  sopn                 String                 @unique(map: "sopn") @db.VarChar(50)
  retailerId           Int
  description          String                 @db.VarChar(255)
  branchId             Int
  branchName           String                 @db.VarChar(50)
  purchaseDate         String                 @db.VarChar(255)
  discount             Decimal?               @db.Decimal(18, 4)
  discountRatio        Decimal?               @db.Decimal(18, 4)
  total                Decimal                @db.Decimal(18, 4)
  totalPayment         Decimal                @db.Decimal(18, 4)
  status               Int
  modifiedDate         String?                @db.VarChar(255)
  createdDate          String                 @db.VarChar(255)
  supplierId           Int?
  supplierName         String                 @db.VarChar(50)
  supplierCode         String                 @db.VarChar(50)
  purchaseById         Int
  purchaseName         String                 @db.VarChar(50)
  exReturnSuppliers    Decimal                @db.Decimal(18, 4)
  exReturnThirdParty   Decimal                @db.Decimal(18, 4)
  payments             payments[]
  purchaseOrderDetails purchaseOrderDetails[]
}

model purchaseOrderDetails {
  id             Int            @id @default(autoincrement())
  purCode        String
  productId      Int
  productCode    String         @db.VarChar(50)
  productName    String         @db.VarChar(255)
  quantity       Int
  price          Decimal        @db.Decimal(18, 4)
  discount       Decimal?       @db.Decimal(18, 4)
  discountRatio  Decimal?       @db.Decimal(18, 4)
  purchaseOrders purchaseOrders @relation(fields: [purCode], references: [sopn], onDelete: Cascade, map: "purchaseOrderDetails_ibfk_1")

  @@unique([purCode, productCode])
}

model payments {
  id             Int            @id @default(autoincrement())
  id_code        Int
  purCode        String
  code           String         @db.VarChar(50)
  amount         Decimal        @db.Decimal(18, 4)
  method         String         @db.VarChar(50)
  status         Int
  statusValue    String         @db.VarChar(255)
  transDate      String         @db.VarChar(255)
  purchaseOrders purchaseOrders @relation(fields: [purCode], references: [sopn], onDelete: Cascade, map: "payments_ibfk_1")

  @@unique([purCode, code], map: "purCode_code")
}

model Customer {
  id            Int       @id @default(autoincrement())
  code          String    @unique
  name          String
  gender        Boolean?
  birthDate     DateTime?
  contactNumber String
  address       String
  locationName  String
  email         String?
  modifiedDate  DateTime
  type          Int?
  organization  String?
  taxCode       String?
  comments      String?
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
}

model suppliers {
  stt                        Int       @id @default(autoincrement())
  id                         Int       @unique
  code                       String    @unique @db.VarChar(20)
  name                       String    @db.VarChar(255)
  email                      String?   @db.VarChar(50)
  contactNumber              String?   @db.VarChar(20)
  address                    String?   @db.VarChar(255)
  locationName               String?   @db.VarChar(255)
  wardName                   String?   @db.VarChar(255)
  organization               String?   @db.VarChar(255)
  comment                    String?   @db.VarChar(255)
  taxCode                    String    @db.VarChar(20)
  groups                     String?   @db.VarChar(50)
  isActive                   Boolean
  modifiedDate               DateTime? @db.DateTime(0)
  createdDate                DateTime  @db.DateTime(0)
  retailerId                 Int?
  branchId                   Int?
  createdBy                  String?   @db.VarChar(50)
  debt                       Decimal?  @db.Decimal(18, 4)
  totalInvoiced              String?
  totalInvoicedWithoutReturn String?
}

model category {
  id             Int        @id @default(autoincrement())
  name           String     @db.VarChar(255)
  level          Int
  parent_id      Int?
  createdBy      String?    @db.VarChar(255)
  isActive       Boolean?
  createDate     DateTime?  @db.DateTime(0)
  modifiedDate   DateTime?  @db.DateTime(0)
  category       category?  @relation("categoryTocategory", fields: [parent_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "category_ibfk_1")
  other_category category[] @relation("categoryTocategory")

  @@index([parent_id], map: "parent_id")
}

model suppliersLocal {
  id            Int       @id @default(autoincrement())
  code          String?   @unique(map: "code") @db.VarChar(50)
  name          String?   @db.VarChar(255)
  organization  String?   @db.VarChar(255)
  taxCode       String?   @db.VarChar(20)
  email         String?   @db.VarChar(50)
  address       String?   @db.VarChar(255)
  contactNumber String?   @db.VarChar(20)
  isActive      Boolean?
  createdDate   DateTime? @db.DateTime(0)
  modifiedDate  DateTime? @db.DateTime(0)
  createdBy     String?   @db.VarChar(255)
}

model invoiceIt {
  soHd             Int                @id
  kyHieuHd         String             @db.VarChar(20)
  ngayHd           String             @db.VarChar(50)
  loaiHinh         String             @db.VarChar(20)
  noiDung          String             @db.Text
  tienThue         Int
  tongTien         Int
  createDate       DateTime?          @db.Timestamp(0)
  userId           Int?
  ptThanhToan      String             @db.VarChar(50)
  mst              String?            @db.VarChar(20)
  tenNcc           String?            @db.VarChar(255)
  diaChi           String?            @db.VarChar(255)
  soDt             Int?
  email            String?            @db.VarChar(255)
  stk              String?            @db.VarChar(50)
  nganHang         String?            @db.VarChar(255)
  webSite          String?            @db.VarChar(255)
  soTienBangChu    String?            @db.VarChar(255)
  tyGia            Int?
  caNhan           String?            @db.VarChar(255)
  file             Bytes?
  users            users?             @relation(fields: [userId], references: [userId], onDelete: NoAction, onUpdate: NoAction, map: "invoiceIt_ibfk_1")
  invoiceItDetails invoiceItDetails[]

  @@index([userId], map: "userId")
}

model users {
  userId           Int                @id @default(autoincrement())
  userName         String             @db.VarChar(255)
  pass             String             @db.VarChar(255)
  email            String?            @db.VarChar(255)
  brithday         DateTime?          @db.Date
  phone            String?            @db.VarChar(10)
  fullName         String?            @db.VarChar(255)
  createDate       DateTime           @db.Date
  invoiceIt        invoiceIt[]
  invoiceItDetails invoiceItDetails[]
}

model invoiceItDetails {
  id                Int        @id @default(autoincrement())
  soHd              Int?
  danhSachHang      String     @db.VarChar(255)
  dvt               String     @db.VarChar(20)
  sl                Int
  donGia            Int
  thanhTienTruocVat Int
  loaiThue          String     @db.VarChar(5)
  tienThueDongHang  Int
  thanhTien         Int
  tongTien          Int
  userId            Int?
  createDate        DateTime?  @db.Date
  invoiceIt         invoiceIt? @relation(fields: [soHd], references: [soHd], onDelete: NoAction, onUpdate: NoAction, map: "invoiceItDetails_ibfk_1")
  users             users?     @relation(fields: [userId], references: [userId], onDelete: NoAction, onUpdate: NoAction, map: "invoiceItDetails_ibfk_2")

  @@index([soHd], map: "soHd")
  @@index([userId], map: "userId")
}

model message {
  id         Int       @id @default(autoincrement())
  userId     String    @db.VarChar(255)
  userMsg    String    @db.Text
  botReply   String    @db.Text
  createDate DateTime? @db.Timestamp(0)
}
